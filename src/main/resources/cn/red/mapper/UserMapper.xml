<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.red.mapper.UserMapper">
	<!-- 根据邮箱 和 密码 来查询用户ID -->
	<select id="selectUidByEmailAndPassword" resultType="int">
		select uid from user where email = #{email} and password = #{password}
	</select>
	
	<select id="selectActived" resultType="int">
		select actived from user where email = #{email}
	</select>
	
	<select id="selectHeadUrl" resultType="String">
		SELECT head_url from user where uid = #{uid}
	</select>
	
	<!-- 根据用户id查询用户 -->
	<select id="selectUserByUid" resultType="cn.red.model.User">
		select uid,username,description,position,school,job,head_url,follow_count,follower_count,like_count,post_count,scan_count
        from user
        where uid=#{uid}
	</select>
	
	<!-- 用于判断邮箱是否已被注册 -->
	<select id="selectEmailCount" resultType="int">
		select count(*) from user where uid = #{uid}
	</select>
	
	<insert id="insertUser">
		insert into user(email,password,actived,activate_code,join_time,username,head_url)
        values(#{email},#{password},#{actived},#{activateCode},#{joinTime},#{username},#{headUrl})
	</insert>
	
	<update id="updateActived">
		update user set actived=1 where activate_code=#{activateCode}
	</update>
	
	<!-- 根据用户id获得用户的编辑信息 -->
	<select id="selectEditInfo" resultType="cn.red.model.User">
		select uid,username,description,position,school,job
		from user
		where uid = #{uid}
	</select>
	
	<update id="updateUser">
		update user set username=#{username},description=#{description},position=#{position},school=#{school},job=#{job}
        where uid=#{uid}
	</update>
	
	<select id="selectPasswordByUid" resultType="String">
		select password from user where uid=#{uid}
	</select>
	
	<!-- 更新用户密码 -->
	<update id="updatePassword">
		update user set password=#{newPassword} where uid=#{uid}
	</update>
	
	<update id="updateHeadUrl">
		update user set head_url=#{headUrl} where uid=#{uid}
	</update>
	
	<!-- 记录访问信息 -->
	<insert id="insertInfo">
	   insert into info values(null, #{requestUrl}, #{contextPath}, #{remoteAddr}, null)
	</insert>
	
	<!-- 列出用户 -->
	<select id="listUserByTime" resultType="cn.red.model.User">
	   select uid,username,head_url from user order by join_time desc limit 6 
	</select>
	
	<!-- 列出热门用户 -->
	<select id="listUserByHot" resultType="cn.red.model.User">
	   select uid,username,head_url from user order by post_count desc limit 6
	</select>
	
	<!-- 更新用户的发帖数量 -->
	<update id="updatePostCount">
	   update user set post_count=post_count+1 where uid=#{uid}
	</update>
	
	<select id="selectUsernameByUid" resultType="cn.red.model.User">
        select uid,username from user where uid=#{uid}
    </select>
	
</mapper>